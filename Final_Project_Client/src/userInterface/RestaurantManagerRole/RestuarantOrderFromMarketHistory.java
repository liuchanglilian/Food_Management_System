/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.RestaurantManagerRole;

import SuperMarketItem.SuperMarketServe;
import business.Enterprise.Restaurant;
import business.UserAccount.UserAccount;
import business.WorkQueue.FoodOrderRequest;
import business.WorkQueue.SuperMarketOrderRequest;
import business.WorkQueue.WorkRequest;
import business.business.EcoSystem;
import java.awt.CardLayout;
import java.io.ObjectOutputStream;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liuch
 */
public class RestuarantOrderFromMarketHistory extends javax.swing.JPanel {

    /**
     * Creates new form RestuarantOrderFromMarketHistory
     */
    EcoSystem system;
    UserAccount userAccount;
    Restaurant restaurant;
    JPanel userProcessContainer;
    ObjectOutputStream streamOut;

    public RestuarantOrderFromMarketHistory(EcoSystem system, UserAccount userAccount, Restaurant restaurant, JPanel userProcessContainer, ObjectOutputStream streamOut) {
        initComponents();
        this.userAccount = userAccount;
        this.restaurant = restaurant;
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.streamOut = streamOut;
        populateTable();

    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : userAccount.getTheOrderIsentoutQueue().getWorkRequestList()) {
            SuperMarketOrderRequest request = (SuperMarketOrderRequest) workRequest;
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getStatus();
            row[2] = request.getReceiver();
            try {
                request.getDeliveryMan().getPerson();
                row[3] = request.getDeliveryMan().getPerson();
            } catch (Exception e) {
                row[3] = "Not yet start delivery";

            }
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request", "Status", "SuperMarjet", "DeliveryMan"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("I have received it");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(133, 133, 133))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = jTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            SuperMarketOrderRequest request = (SuperMarketOrderRequest) jTable1.getValueAt(row, 0);
            if (request.getDeliveryMan() == null) {
                JOptionPane.showMessageDialog(null, "Package hasn't been deliver, be patient");
                return;
            }
            request.setStatus("Accepted");
            request.getDeliveryMan().getWorkQueue().getWorkRequestList().remove(request);
            populateTable();
            userAccount.getTheOrderIsentoutQueue().getWorkRequestList().remove(request);
            for (SuperMarketServe s : request.getItemList()) {

                for (SuperMarketServe sms : restaurant.getRawfoodList()) {
                    if (s.getItem().getName().equals(sms.getItem().getName())) {
                        sms.setNumber(sms.getNumber() + s.getNumber());
                    } else {
                        SuperMarketServe newMarketServe = new SuperMarketServe();
                        newMarketServe.setItem(s.getItem());
                        newMarketServe.setNumber(s.getNumber());
                    }
                }
            }
            try {
                streamOut.reset();
                streamOut.writeObject(system);
                streamOut.flush();
            } catch (Exception e) {
                System.out.println("Error:" + e.getMessage());
            }
            // TODO add your handling code here:
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
