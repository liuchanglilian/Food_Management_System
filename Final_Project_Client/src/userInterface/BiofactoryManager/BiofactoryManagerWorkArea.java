/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.BiofactoryManager;

import business.Enterprise.BioFactory;
import business.Enterprise.Enterprise;
import business.UserAccount.UserAccount;
import business.WorkQueue.DisposalRequest;
import business.WorkQueue.WorkRequest;
import business.business.EcoSystem;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sunwen
 */
public class BiofactoryManagerWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form BiofactoryManagerWorkArea
     */
    private BioFactory factory;
    private JPanel userProcessContainer;
    private UserAccount account;
     private ObjectOutputStream streamOut = null;
     private EcoSystem system;
    public BiofactoryManagerWorkArea(EcoSystem system,JPanel userProcessContainer, UserAccount account,Enterprise factory, ObjectOutputStream streamOut) {
        initComponents();
        this.factory = (BioFactory)factory;
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.streamOut = streamOut;
        this.system =system;
        labelFactory.setText(factory.getName());
        populateTable();
        
    }
    
    private void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblRequest.getModel();
        model.setRowCount(0);
        if(factory.getRequestQueue().getWorkRequestList().size()!=0)
        {  for (WorkRequest workrequest: factory.getRequestQueue().getWorkRequestList())
        {
            DisposalRequest d = (DisposalRequest) workrequest;   
            Object[] row = new Object[4];
            row[0] = d;
            row[1] = d.getWeight();
            row[2] = d.getStatus();
            row[3] = d.getSendRestaurant();
            model.addRow(row);
        }
        }
        else
            return;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelFactory = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();

        labelFactory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelFactory.setText("jLabel1");

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Leftover Weight", "Status", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);
        if (tblRequest.getColumnModel().getColumnCount() > 0) {
            tblRequest.getColumnModel().getColumn(0).setResizable(false);
            tblRequest.getColumnModel().getColumn(1).setResizable(false);
            tblRequest.getColumnModel().getColumn(2).setResizable(false);
            tblRequest.getColumnModel().getColumn(3).setResizable(false);
        }

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(labelFactory))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnApprove)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(labelFactory)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnApprove)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        int row =tblRequest.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            DisposalRequest d = (DisposalRequest) tblRequest.getValueAt(row,0);
            if(d.getStatus().equalsIgnoreCase("Approved"))
             JOptionPane.showMessageDialog(null, "This Request Has been Approved");
            else
            {
                d.setStatus("Approved");
                d.getSendRestaurant().setLeftover(d.getSendRestaurant().getLeftover()-d.getWeight());
                factory.getRequestQueue().getWorkRequestList().remove(d);
                d.getSendOrganization().getWorkQueue().getWorkRequestList().remove(d);
//                System.out.println(d.getSendOrganization().getWorkQueue().getWorkRequestList().size());
                try {
                    streamOut.reset();
                    streamOut.writeObject(system);
                    streamOut.flush();
                } catch (IOException ex) {
                    Logger.getLogger(BiofactoryManagerWorkArea.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }
        populateTable();
    }//GEN-LAST:event_btnApproveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelFactory;
    private javax.swing.JTable tblRequest;
    // End of variables declaration//GEN-END:variables
}
