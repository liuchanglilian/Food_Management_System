/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.RestaurantManagerRole;

import Food.Menu;
import Food.RestaurantDish;
import Network.Network;
import business.Enterprise.Enterprise;
import business.Enterprise.Restaurant;
import business.UserAccount.UserAccount;
import business.business.EcoSystem;
import java.awt.CardLayout;
import java.awt.Image;
import java.io.ObjectOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import picutill.PicUtil;
import picutill.OnlineDish;
import userInterface.SuperMarketManager.ManageDiscountJPanel;

/**
 *
 * @author Wen
 */
public class ManageManuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RestaurantManagerWorkAreaJPanel
     */
    private EcoSystem system;
    private Restaurant restaurant;
    private String restaurantName;
    private JPanel userProcessContainer;
    private Connection con;
    private ObjectOutputStream streamOut;
    public ManageManuJPanel(EcoSystem system,Restaurant restaurant,JPanel userProcessContainer, ObjectOutputStream streamOut) {
        initComponents();
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        this.restaurant = restaurant;
        this.restaurantName = restaurant.getName();
        this.streamOut = streamOut;
        populateTable();
    }
     public ArrayList<OnlineDish> userList(){
        ArrayList<OnlineDish> userList = new ArrayList<>();
        try{
           /* Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://35.185.14.219:3306;databaseName=new_schema;user=root;password=8466";
            Connection con = DriverManager.getConnection(url);*/
             String DB_URL = "jdbc:mysql://35.185.14.219:3306/new_schema";
             String DB_DRV =  "com.mysql.jdbc.Driver";
             String DB_USER = "root";
            String DB_PASSWD = "8466";
            con=DriverManager.getConnection (DB_URL,DB_USER,DB_PASSWD);
            String query1 = "SELECT * FROM new_schema.`"+restaurant.getUserAccount().getUsername()+"`";
            Statement st = (Statement)con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            OnlineDish user;
            while(rs.next()){
               user = new OnlineDish(rs.getInt("id"),rs.getString("Name"),rs.getDouble("Price"),rs.getBytes("pic"));
                
                userList.add(user);
            }
    }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        return userList;
    }
 public void populateTable()
{
   /*  DefaultTableModel model = (DefaultTableModel) tblManu.getModel();
     model.setRowCount(0);
     for (RestaurantDish rd :restaurant.getMenu().getMenuList()){
            Object[] row = new Object[2];
            row[0] = rd;
            row[1] = rd.getPrice();
            model.addRow(row);
        }
    */
    ArrayList<OnlineDish> list = userList();
      // jTable1.getColumnModel().getColumn(2).setCellRenderer(jTable1.getDefaultRenderer(ImageIcon.class));
       DefaultTableModel model =(DefaultTableModel) tblManu.getModel();
        model.setRowCount(0);
       //if(list.size()>1)
           
      // jLabel4.setIcon(new ImageIcon(list.get(1).getPic()));
      /* {ImageIcon a = new ImageIcon(list.get(1).getPic());
        Image image = a.getImage();
        double h = 100.0/a.getIconHeight();
        Image newimg = image.getScaledInstance((int)(a.getIconWidth()*h), (int)(a.getIconHeight()*h),java.awt.Image.SCALE_SMOOTH);
        ImageIcon newone= new ImageIcon(newimg);
        jLabel4.setIcon(newone);
       }*/
       Object[] row = new Object[3];
       for(int i=0;i<list.size();i++)
       {
           row[0] = list.get(i).getId();
           row[1] = list.get(i);
           row[2] = list.get(i).getPrice();
        //   row[2] = new ImageIcon(list.get(i).getPic());
          // row[2] = new ImageIcon([B@72d5d89e);
           //System.out.println("after read"+list.get(i).getPic());
           model.addRow(row);
       }
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManu = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDishName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        tblManu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblManuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblManu);
        if (tblManu.getColumnModel().getColumnCount() > 0) {
            tblManu.getColumnModel().getColumn(1).setResizable(false);
            tblManu.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setText("Name:");

        jLabel2.setText("Price:");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDelete.setText("Select and Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Manage Manu");

        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setBackground(new java.awt.Color(204, 204, 255));
        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 16)); // NOI18N
        jLabel5.setText("  Load Photo Here");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnDelete)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(17, 17, 17))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDishName, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(163, 163, 163)
                                .addComponent(btnAdd)
                                .addGap(19, 19, 19)))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(638, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDishName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnAdd))
                .addGap(65, 356, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
     /*        String dishName = txtDishName.getText();
        double price = Double.parseDouble(txtPrice.getText());
        restaurant.addMenu(dishName,price);
        populateTable();
*/
 String name = txtDishName.getText();
 String p= txtPrice.getText();
if((name.equals(""))||(p.equals("")))
{
    JOptionPane.showMessageDialog(null, "Please add the name and price of your dish!!!!");
    return;
}
 double price = Double.parseDouble(p);
 byte[] pic = null;
  try{ 
      pic = PicUtil.readImage();
  }catch(Exception e)
  {
      JOptionPane.showMessageDialog(null,"Please add the picture~~~");
      return;
  }
    //System.out.println("byte is "+pic);
    //String query = "INSERT INTO new_schema.Pic ('Name','pic') VALUES (?,?)";
    String query = "INSERT INTO `new_schema`.`"+restaurant.getUserAccount().getUsername()+"`  (`Name`,`Price`,`pic`) VALUES (?,?,?)";
    PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) con.prepareStatement(query);
            //pstmt.setInt(1, id);
            pstmt.setString(1, name);
            pstmt.setDouble(2, price);
            pstmt.setBytes(3, pic);
            pstmt.execute();
            populateTable();
            JOptionPane.showMessageDialog(null,"Uploaded");
            try{
                streamOut.reset();
                streamOut.writeObject(system);
                streamOut.flush();
            }catch(Exception e){
                System.out.println("Error:"+e.getMessage());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            System.out.println(ex);
        }

    

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    int selectedRow=tblManu.getSelectedRow();
     if(selectedRow<0)
     {
         JOptionPane.showMessageDialog(null,"Please select");
         return;
     }
     else {
            OnlineDish dish = ( OnlineDish)tblManu.getValueAt(selectedRow,1); 
        String query1 ="DELETE FROM `new_schema`.`"+ restaurant.getUserAccount().getUsername()+"` WHERE `id`='"+dish.getId()+"';";
             Statement st;
        try {
            st = (Statement)con.createStatement();
            st.executeUpdate(query1);
            populateTable();
            JOptionPane.showMessageDialog(null,"Manu deleted");
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManageDiscountJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
      /*  int row = tblManu.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
        RestaurantDish p = (RestaurantDish)tblManu.getValueAt(row, 0);
       restaurant.getMenu().getMenuList().remove(p);
       JOptionPane.showMessageDialog(null, "Delete Succeed", "Warning", JOptionPane.WARNING_MESSAGE);
        populateTable();
        }
        */

        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblManuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblManuMouseClicked
int i = tblManu.getSelectedRow();
   //new ImageIcon(list.get(i).getPic());
   ImageIcon image1 = new ImageIcon(((OnlineDish)tblManu.getValueAt(i,1)).getPic());
           //(ImageIcon)jTable1.getValueAt(i,2);
  Image image = image1.getImage();
   double h = 100.0/image1.getIconHeight();
    Image newimg = image.getScaledInstance((int)(image1.getIconWidth()*h), (int)(image1.getIconHeight()*h),java.awt.Image.SCALE_SMOOTH);
   ImageIcon newone= new ImageIcon(newimg);
   jLabel4.setIcon(newone);        // TODO add your handling code here:
    }//GEN-LAST:event_tblManuMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
       jLabel5.setIcon(PicUtil.getImage()); // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblManu;
    private javax.swing.JTextField txtDishName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
