/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import Food.FoodServe;
import Food.Order;
import Food.RestaurantDish;
import Network.Network;
import business.Enterprise.Enterprise;
import business.Enterprise.Restaurant;
import business.UserAccount.UserAccount;
import Address.Address;
import business.WorkQueue.FoodOrderRequest;
import business.WorkQueue.WorkRequest;
import business.business.EcoSystem;
import java.awt.CardLayout;
import java.awt.Image;
import java.io.ObjectOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.table.DefaultTableModel;
import picutill.OnlineDish;

/**
 *
 * @author liuch
 */
public class CustomerWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form CustomerWorkArea
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    Network network;
    private Order order;
     private boolean isCheckedOut = false;
     private Connection con;
     private ObjectOutputStream streamOut;
     private EcoSystem system;
    public CustomerWorkArea(EcoSystem system,JPanel userProcessContainer,UserAccount userAccount,Network network,ObjectOutputStream streamOut) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.network = network;
        this.streamOut = streamOut;
        this.system = system;
        jLabel1.setText("Find all these Yummy food in "+network.getName());
        populateCombo();
        populateAddressCombo();
        jComboBox2.setSelectedIndex(0);
         if(!isCheckedOut)
        order = new Order();
       
    }
    public void populateCombo()
    {
         jComboBox2.removeAllItems();
        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if(e instanceof Restaurant) 
            jComboBox2.addItem(e);
        }
        
        populateTable();
    }
     public String DecimalFormat(double d)
      {
         DecimalFormat df = new DecimalFormat("0.00");
         return df.format(d);
      }
     public void populateAddressCombo()
    {
         addressCombo.removeAllItems();
        for (Address address:userAccount.getAddress()) {
           addressCombo.addItem(address);
        }
        
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        quantitySpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        addressCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("jLabel1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dish", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food", "Number", "Discounted?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 102));
        jLabel2.setText("My Meal Today");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel3.setText("Total Price:");

        jButton1.setBackground(new java.awt.Color(255, 153, 153));
        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Quantity:");

        addressCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addressCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressComboActionPerformed(evt);
            }
        });

        jLabel4.setText("Address:");

        jButton2.setText("Add Address");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 0, 0));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Check Discount Food of this restaurant");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("<<Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel4))
                                    .addComponent(addressCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addComponent(jButton2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(31, 31, 31)))
                        .addComponent(btnAdd)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addressCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
     int row = jTable2.getSelectedRow();
        if(row<0)
        {
            JOptionPane.showMessageDialog(null, "PLS SELECT A ROW");
            return;
        }
       FoodServe fd = (FoodServe)jTable2.getValueAt(row, 0);
       int number = (Integer)jTable2.getValueAt(row, 1);
       if((((String)jTable2.getValueAt(row,2)).equals("X")))
       {   
           order.getOrderList().remove(fd);
          
       } else {
           order.getDiscountFoodList().remove(fd);
            Restaurant r=(Restaurant)jComboBox2.getSelectedItem();
           for(FoodServe f:r.getUnfreshfoodList()){
               if(f.getDish()==fd.getDish())
                   f.setNumber(number+f.getNumber());
           }
           
           System.out.println("fd number:"+fd.getNumber());
           
        }
       
        refreshOrderTable();
        populateTable();
        printTotalPrice();
        JOptionPane.showMessageDialog(null,"OrderITem removed from the cart");
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed
public void refreshOrderTable()
    {
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        model.setRowCount(0);
        for(FoodServe fd : order.getOrderList())
        {
            
                      Object row[] = new Object[3];
                      row[0] = fd;
                      row[1] =fd.getNumber();
                      row[2] = "X";
                      model.addRow(row);
                
            
        }
        for(FoodServe fd : order.getDiscountFoodList())
        {
            
                      Object row[] = new Object[3];
                      row[0] = fd;
                      row[1] =fd.getNumber();
                      row[2] = "O";
                      model.addRow(row);
                
            
        }
    }

 public void printTotalPrice()
  {
      double totalPrice =0;
         for(FoodServe fd: order.getOrderList())
         {
             totalPrice=totalPrice+fd.getNumber()*fd.getDish().getPrice();
         }
          for(FoodServe fd: order.getDiscountFoodList())
         {
             totalPrice=totalPrice+fd.getNumber()*fd.getDish().getPrice()*0.5;
         }
         jTextField1.setText(DecimalFormat(totalPrice));
  }
 
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
 int selectedRow=jTable1.getSelectedRow();
     if(selectedRow<0)
     {
         JOptionPane.showMessageDialog(null,"Please select");
         return;
     }
     //RestaurantDish selectedDish = (RestaurantDish)jTable1.getValueAt(selectedRow,0);
     OnlineDish selectedDish = (OnlineDish)jTable1.getValueAt(selectedRow,0);
     int fetchQty=(Integer)quantitySpinner.getValue();        // TODO add your handling code here:
     if(fetchQty<=0)
     {
         JOptionPane.showMessageDialog(null,"Can't be zero");
         return;
     }
     try{
     
    
         boolean alereadyPresent = false;
         for(FoodServe fd : order.getOrderList())
         {
             if(fd.getDish() == selectedDish)
             {
                 fd.setNumber(fd.getNumber()+fetchQty);
                 alereadyPresent = true;
                 populateTable();
                 refreshOrderTable();
                 printTotalPrice();
                 break;
             }
         }
         if(!alereadyPresent)
         {
          FoodServe fnew = new FoodServe(selectedDish,fetchQty);
          order.getOrderList().add(fnew);
          
          populateTable();
          refreshOrderTable();
          printTotalPrice();
         }
         
     
   
     }
     
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(null,"Invalid");
         return;
     }
                // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed
    public void populateTable()
    {
        //int rowCount = jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
         model.setRowCount(0);
         Restaurant r=(Restaurant)jComboBox2.getSelectedItem();
        // System.out.println(r);
         //System.out.println(r.);
         ArrayList<OnlineDish>list= userList(r);
        /*   for(RestaurantDish dish :r.getMenu().getMenuList()) {
           Object row[] = new Object[2];
            row[0] = dish;
            row[1] = dish.getPrice();
            model.addRow(row);
        
         }*/
       for(OnlineDish dish :list) {
           Object row[] = new Object[2];
           row[0] = dish;
           row[1] = dish.getPrice();
            model.addRow(row);
        
         }  
    
    }
      public ArrayList<OnlineDish> userList(Restaurant restaurant){
        ArrayList<OnlineDish> userList = new ArrayList<>();
        try{
           /* Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://35.185.14.219:3306;databaseName=new_schema;user=root;password=8466";
            Connection con = DriverManager.getConnection(url);*/
             String DB_URL = "jdbc:mysql://35.185.14.219:3306/new_schema";
             String DB_DRV =  "com.mysql.jdbc.Driver";
             String DB_USER = "root";
            String DB_PASSWD = "8466";
            con=DriverManager.getConnection (DB_URL,DB_USER,DB_PASSWD);
            String query1 = "SELECT * FROM new_schema.`"+restaurant.getUserAccount().getUsername()+"`";
            Statement st = (Statement)con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            OnlineDish user;
            while(rs.next()){
               user = new OnlineDish(rs.getInt("id"),rs.getString("Name"),rs.getDouble("Price"),rs.getBytes("pic"));
                
                userList.add(user);
            }
    }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        return userList;
    }
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        populateTable();  
        order = new Order();// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     Restaurant r=(Restaurant)jComboBox2.getSelectedItem();
        if(order.getOrderList().size() > 0||order.getDiscountFoodList().size()>0)
    {
     Date currentTime= new Date();
     /*for(FoodServe fd:order.getOrderList())
     {
         fd.setDate(currentTime);
     }*/
     System.out.println(r.getUserAccount().getPerson().getName());
     
     FoodOrderRequest request = new FoodOrderRequest(r);
     request.setOrder(order);
     request.setRequestDate(currentTime);
     request.setSender(userAccount);
     request.setStatus("Sent");
     Address a = (Address)addressCombo.getSelectedItem();
     if(a==null)
     {
         JOptionPane.showMessageDialog(null,"Please Add address");
         return;
     }
     request.setAddress(a);
     //r.getUserAccount().getWorkQueue().getWorkRequestList().add(request);
     r.getFoodOrderqueue().getWorkRequestList().add(request);
     userAccount.getTheOrderIsentoutQueue().getWorkRequestList().add(request);
     System.out.println("size of is sent"+userAccount.getTheOrderIsentoutQueue().getWorkRequestList().size());
     try{
     streamOut.reset();
     streamOut.writeObject(system);
   //  system.getName();
    // System.out.println("********"+system.getNetworkList().get(0).getUserList().getUserAccountList().get(0).getTheOrderIsentoutQueue().getWorkRequestList().size());
     streamOut.flush();
     }catch(Exception exception){
         System.out.println("Error:"+exception.getMessage());
     }
      JOptionPane.showMessageDialog(null, "Order placed successfully");
      order = new Order();
      
      refreshOrderTable();
      populateTable();
      isCheckedOut = true;
    }
    else
    {
            JOptionPane.showMessageDialog(null,"no order placed");
            }
       
             // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      AddAddress panel = new AddAddress(userAccount,1,network,userProcessContainer);
      userProcessContainer.add("AddAddressJPanel", panel);
      CardLayout layout = (CardLayout) userProcessContainer.getLayout();
      layout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    
        Restaurant r=(Restaurant)jComboBox2.getSelectedItem();
        Discount_food panel = new Discount_food(userAccount,r,userProcessContainer,order);
      userProcessContainer.add("DiscountFoodJPanel", panel);
      CardLayout layout = (CardLayout) userProcessContainer.getLayout();
      layout.next(userProcessContainer);// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
                                    
int i = jTable1.getSelectedRow();
   //new ImageIcon(list.get(i).getPic());
try{   ImageIcon image1 = new ImageIcon(((OnlineDish)jTable1.getValueAt(i,0)).getPic());
           //(ImageIcon)jTable1.getValueAt(i,2);
  Image image = image1.getImage();
   double h = 300.0/image1.getIconHeight();
    Image newimg = image.getScaledInstance((int)(image1.getIconWidth()*h), (int)(image1.getIconHeight()*h),java.awt.Image.SCALE_SMOOTH);
   ImageIcon newone= new ImageIcon(newimg);
   jLabel8.setIcon(newone);   }catch(Exception e){
       System.out.println(e.getMessage());
   }
 // TODO add your handling code here:
                                     
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void addressComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressComboActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    if( (isCheckedOut==false)&&((order.getOrderList().size()!=0)||(order.getDiscountFoodList().size()!=0)))
    {
        JOptionPane.showMessageDialog(null,"Please finish your order");
        return;
    }
    userProcessContainer.remove(this);
     CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer); // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox addressCombo;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JSpinner quantitySpinner;
    // End of variables declaration//GEN-END:variables
}
